{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","prototype","hasOwnProperty","TypeError","String","__","constructor","create","__assign","assign","s","arguments","apply","defineProperty","value","matches","validateSchema","matchObject","matchArray","matchesAtomic","SchemaError","_super","message","_this","name","typeMapKeys","schema","_","config","isArray","strict","every","shouldValidateSchema","defaults","_a","objClone","key","keys","indexOf","forEach","k"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"class SchemaError extends Error {\n    constructor (message: string) {\n        super(message);\n        this.name = 'SchemaError';\n    }\n}\n\ninterface Config {\n    shouldValidateSchema?: boolean;\n    strict?: boolean;\n}\n\ntype TypeMap = {\n    string: string;\n    number: number;\n    boolean: boolean;\n    object: object;\n    function: Function;\n    undefined: undefined;\n    any: any\n    symbol: symbol;\n}\n\nconst typeMapKeys = [\n    'string',\n    'number',\n    'boolean',\n    'object',\n    'function',\n    'undefined',\n    'any',\n    'symbol'\n];\n\nexport type Schema = keyof TypeMap\n    | Schema[]\n    | { [key: string]: Schema };\n\nexport type SchemaResult<T> =\n    T extends keyof TypeMap\n        ? TypeMap[T]\n        :\n    T extends Schema[]\n        ? SchemaResult<T[number]>[]\n        :\n    T extends { [ key: string ]: Schema }\n        ? { [K in keyof T]: SchemaResult<T[K]> }\n        :\n    never;\n\nexport function matchesAtomic (o: unknown, schema: keyof TypeMap, _: Config): boolean {\n    if (schema === 'any') {\n        return true;\n    }\n    return typeof o === schema;\n}\n\nexport function matchArray<T extends Schema> (o: unknown, schema: T[], config: Config): o is SchemaResult<T> {\n    return Array.isArray(o)\n        && (o.length === schema.length || !config.strict)\n        && schema.every((s, i) => matches(o[i], s, null, {\n            ...config,\n            shouldValidateSchema: false\n        }));\n}\n\nexport function matchObject<T extends { [k: string]: Schema }, D> (\n    o: unknown,\n    schema: T,\n    defaults: { [P in keyof T]?: SchemaResult<T[P]> } = {},\n    config: Config\n): o is SchemaResult<T> {\n    if (typeof o !== 'object' || o === null) {\n        return false;\n    }\n\n    // clone so can safely mutate (adding defaults)\n    let objClone: Record<string, unknown> = { ...o as Record<string, unknown> };\n    for (const key in defaults) {\n        objClone[key] ??= defaults[key];\n    }\n\n    if (config.strict) {\n        if (Object.keys(objClone).length !== Object.keys(schema).length) {\n            return false;\n        }\n    }\n\n    for (const key in schema) {\n        if (!matches(objClone[key], schema[key], null, {\n            ...config,\n            shouldValidateSchema: false\n        })) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n\nexport function validateSchema (schema: unknown): asserts schema is Schema {\n    if (typeof schema === 'string') {\n        if (typeMapKeys.indexOf(schema) < 0) {\n            throw new SchemaError('Invalid schema');\n        }\n\n    } else if (Array.isArray(schema)) {\n        schema.forEach(validateSchema);\n\n    } else if (typeof schema === 'object') {\n        Object.keys(schema)\n            .forEach(k => validateSchema(schema[k as keyof typeof schema]))\n\n    } else {\n        throw new SchemaError('Invalid schema');\n    }\n}\n\nexport function matches<T extends Schema> (\n    o: unknown,\n    schema: T,\n    defaults: T extends object\n        ? { [P in keyof T]?: SchemaResult<T[P]> } | null\n        : null = null,\n    config: Config = {\n        shouldValidateSchema: true,\n        strict: false\n    }\n): o is SchemaResult<T> {\n    if (config.shouldValidateSchema) {\n        validateSchema(schema);\n    }\n\n    if (typeof schema === 'string') {\n        return matchesAtomic(o, schema as keyof TypeMap, config);\n    }\n    if (Array.isArray(schema)) {\n        return matchArray(o, schema, config);\n    }\n    if (typeof schema === 'object') {\n        return matchObject(o, schema, defaults, config);\n    }\n\n    return false;\n}"]}