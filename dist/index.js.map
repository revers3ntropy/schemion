{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","module","extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","prototype","hasOwnProperty","TypeError","String","__","constructor","create","__assign","assign","s","arguments","apply","defineProperty","value","matches","SchemaError","_super","message","_this","name","typeMapKeys","validateSchema","schema","indexOf","isArray","forEach","keys","k","defaults","_a","undefined","_c","shouldValidateSchema","matchesAtomic","every","v","matchArray","objClone","key","matchObject"],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",null,"class SchemaError extends Error {\n    constructor (message: string) {\n        super(message);\n        this.name = 'SchemaError';\n    }\n}\n\ntype TypeMap = {\n    string: string;\n    number: number;\n    boolean: boolean;\n    object: object;\n    function: Function;\n    undefined: undefined;\n    any: any\n    symbol: symbol;\n}\n\nconst typeMapKeys = [\n    'string',\n    'number',\n    'boolean',\n    'object',\n    'function',\n    'undefined',\n    'any',\n    'symbol'\n];\n\ntype Schema = keyof TypeMap\n    | Schema[]\n    | { [key: string]: Schema };\n\ntype MatchResult <T> =\n    T extends keyof TypeMap\n        ? TypeMap[T]\n        :\n    T extends Schema[]\n        ? MatchResult<T[number]>[]\n        :\n    T extends { [ key: string ]: Schema }\n        ? { [K in keyof T]: MatchResult<T[K]> }\n        :\n    never;\n\nfunction matchesAtomic (o: unknown, schema: keyof TypeMap): boolean {\n    if (schema === 'any') {\n        return true;\n    }\n    return typeof o === schema;\n}\n\nfunction matchArray<T extends Schema> (o: unknown, schema: T[]): o is MatchResult<T> {\n    return Array.isArray(o)\n        && o.length === schema.length\n        && o.every((v, i) => matches(v, schema[i], undefined, {\n            shouldValidateSchema: false\n        }));\n}\n\nfunction matchObject<T extends { [k: string]: Schema }, D> (\n    o: unknown,\n    schema: T,\n    defaults: { [P in keyof T]?: MatchResult<T[P]> } = {}\n): o is MatchResult<T> {\n    if (typeof o !== 'object' || o === null) {\n        return false;\n    }\n\n    // clone so can safely mutate (adding defaults)\n    let objClone: Record<string, unknown> = { ...o as Record<string, unknown> };\n    for (const key in defaults) {\n        objClone[key] ??= defaults[key];\n    }\n\n    for (const key in schema) {\n        if (!matches(objClone[key], schema[key], undefined, {\n            shouldValidateSchema: false\n        })) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\nfunction validateSchema (schema: unknown): asserts schema is Schema {\n    if (typeof schema === 'string') {\n        if (typeMapKeys.indexOf(schema) < 0) {\n            throw new SchemaError('Invalid schema');\n        }\n\n    } else if (Array.isArray(schema)) {\n        schema.forEach(validateSchema);\n\n    } else if (typeof schema === 'object') {\n        Object.keys(schema)\n            .forEach(k => validateSchema(schema[k as keyof typeof schema]))\n\n    } else {\n        throw new SchemaError('Invalid schema');\n    }\n}\n\nexport function matches<T extends Schema> (\n    o: unknown,\n    schema: T,\n    defaults: T extends object\n        ? { [P in keyof T]?: MatchResult<T[P]> } | undefined\n        : undefined = undefined,\n    {\n        shouldValidateSchema = true,\n    }: {\n        shouldValidateSchema?: boolean;\n    } = {}\n): o is MatchResult<T> {\n    if (shouldValidateSchema) {\n        validateSchema(schema);\n    }\n\n    if (typeof schema === 'string') {\n        return matchesAtomic(o, schema as keyof TypeMap);\n    }\n    if (Array.isArray(schema)) {\n        return matchArray(o, schema);\n    }\n    if (typeof schema === 'object') {\n        return matchObject(o, schema, defaults);\n    }\n\n    return false;\n}"]}